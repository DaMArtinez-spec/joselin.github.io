<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Perfecta ‚ù§Ô∏è</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            background: #1a1a1a;
            font-family: Arial, sans-serif;
            overflow-x: hidden;
            position: relative;
        }

        .scroll-buttons {
            position: fixed;
            right: 20px;
            top: 50%;
            transform: translateY(-50%);
            display: flex;
            flex-direction: column;
            gap: 10px;
            z-index: 1000;
        }

        .scroll-btn {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: rgba(255, 105, 180, 0.7);
            border: none;
            color: white;
            cursor: pointer;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 20px;
            transition: all 0.3s ease;
            box-shadow: 0 0 10px rgba(255, 105, 180, 0.5);
        }

        .scroll-btn:hover {
            background: rgba(255, 105, 180, 1);
            transform: scale(1.1);
        }

        .music-control {
            position: fixed;
            left: 20px;
            top: 20px;
            z-index: 1000;
            background: rgba(255, 105, 180, 0.7);
            border: none;
            color: white;
            padding: 10px 20px;
            border-radius: 20px;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 0 10px rgba(255, 105, 180, 0.5);
        }

        .music-control:hover {
            background: rgba(255, 105, 180, 1);
            transform: scale(1.1);
        }

        .stars {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
        }

        .star {
            position: absolute;
            background: white;
            border-radius: 50%;
            animation: twinkle var(--duration) infinite;
            opacity: 0;
        }

        @keyframes twinkle {
            0%, 100% { opacity: 0; }
            50% { opacity: 1; }
        }

        .container {
            background: rgba(255, 255, 255, 0.1);
            padding: 2rem;
            border-radius: 20px;
            backdrop-filter: blur(10px);
            max-width: 600px;
            width: 90%;
            text-align: center;
            position: relative;
            z-index: 1;
            animation: float 6s infinite;
            box-shadow: 0 0 20px rgba(255, 105, 180, 0.3);
        }

        @keyframes float {
            0%, 100% { transform: translateY(0); }
            50% { transform: translateY(-20px); }
        }

        h1 {
            color: #ff69b4;
            font-size: 2.5em;
            margin-bottom: 1rem;
            text-shadow: 0 0 10px #ff69b4;
        }

        .message {
            color: white;
            font-size: 1.2em;
            line-height: 1.6;
            margin: 2rem 0;
            opacity: 0;
            transform: translateY(20px);
            text-shadow: 0 0 5px rgba(255, 255, 255, 0.5);
        }

        .visible {
            opacity: 1;
            transform: translateY(0);
            transition: all 1s ease;
        }

        .hearts-container {
            position: absolute;
            width: 100%;
            height: 100%;
            pointer-events: none;
        }

        .heart {
            position: absolute;
            font-size: 1.5rem;
            animation: float-heart var(--duration) linear infinite;
            opacity: 0;
        }

        @keyframes float-heart {
            0% {
                transform: translateY(100vh) rotate(0deg);
                opacity: 1;
            }
            100% {
                transform: translateY(-100vh) rotate(360deg);
                opacity: 0;
            }
        }

        .buttons {
            margin-top: 2rem;
            display: flex;
            justify-content: center;
            gap: 1rem;
        }

        button {
            padding: 1rem 2rem;
            font-size: 1.2em;
            border: none;
            border-radius: 50px;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        #siBtn {
            background: linear-gradient(45deg, #ff69b4, #ff1493);
            color: white;
            box-shadow: 0 0 20px #ff69b4;
        }

        #noBtn {
            background: white;
            color: #ff69b4;
        }

        button:hover {
            transform: scale(1.1);
        }

        button::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: rgba(255, 255, 255, 0.2);
            transform: rotate(45deg);
            transition: 0.5s;
        }

        button:hover::before {
            left: 100%;
        }

        .final-message {
            display: none;
            color: white;
            font-size: 1.5em;
            text-align: center;
            margin-top: 2rem;
            animation: fadeIn 2s ease;
            text-shadow: 0 0 5px rgba(255, 255, 255, 0.5);
        }

        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        .flower {
            position: absolute;
            font-size: 2rem;
            pointer-events: none;
            animation: rotate-fall var(--duration) linear infinite;
        }

        @keyframes rotate-fall {
            0% {
                transform: translateY(-100vh) rotate(0deg);
                opacity: 1;
            }
            100% {
                transform: translateY(100vh) rotate(360deg);
                opacity: 0;
            }
        }
    </style>
</head>
<body>
    <!-- Botones de desplazamiento -->
    <div class="scroll-buttons">
        <button class="scroll-btn" onclick="scrollPage('up')">‚Üë</button>
        <button class="scroll-btn" onclick="scrollPage('down')">‚Üì</button>
    </div>

    <!-- Control de m√∫sica -->
    <button class="music-control" onclick="toggleMusic()">üéµ M√∫sica</button>
    <audio id="bgMusic" loop>
        <source src="/wwd.mp3juice.blog - para ti ·ê∏3.mp3" type="audio/mpeg">
    </audio>

    <div class="stars"></div>
    <div class="hearts-container"></div>
    <div class="container">
        <h1>MI PRINCESA...</h1>
        <div class="message">
            Yo di muchas vueltas a este mundo y por fin te encontre.
            Para mi no hay otra que a ti se te compare, se que todo va estar bien pues yo ya te so√±e.
            Tu eres la perfecci√≥n mirando al cielo yo deseo estar contigo, te quiero de verdad.
        </div>
        <div class="message">
            Por eso hoy, quiero preguntarte algo muy especial...
        </div>
        <div class="message">
            ¬øMe harias el hombre mas feliz si aceptaras ser mi San Valentin?
        </div>
        <div class="buttons">
            <button id="siBtn">¬°S√≠, mi PAPI! ‚ù§Ô∏èüî•</button>
            <button id="noBtn">No üíî</button>
        </div>
        <div class="final-message"></div>
    </div>

    <script>
        // Funcionalidad de desplazamiento
        function scrollPage(direction) {
            const scrollAmount = window.innerHeight;
            const scrollOptions = {
                top: direction === 'up' ? -scrollAmount : scrollAmount,
                behavior: 'smooth'
            };
            window.scrollBy(scrollOptions);
        }

        // Funcionalidad de m√∫sica
        const bgMusic = document.getElementById('bgMusic');
        let isMusicPlaying = false;

        function toggleMusic() {
            if (isMusicPlaying) {
                bgMusic.pause();
                isMusicPlaying = false;
            } else {
                bgMusic.play();
                isMusicPlaying = true;
            }
        }

        // Intentar reproducir m√∫sica autom√°ticamente
        window.addEventListener('load', () => {
            const playPromise = bgMusic.play();
            if (playPromise !== undefined) {
                playPromise.then(() => {
                    isMusicPlaying = true;
                }).catch(error => {
                    console.log("Autoplay prevented by browser");
                });
            }
        });

        // Crear estrellas
        const starsContainer = document.querySelector('.stars');
        for (let i = 0; i < 200; i++) {
            const star = document.createElement('div');
            star.className = 'star';
            star.style.width = Math.random() * 3 + 'px';
            star.style.height = star.style.width;
            star.style.left = Math.random() * 100 + 'vw';
            star.style.top = Math.random() * 100 + 'vh';
            star.style.setProperty('--duration', Math.random() * 3 + 2 + 's');
            starsContainer.appendChild(star);
        }

        // Mostrar mensajes gradualmente
        const messages = document.querySelectorAll('.message');
        messages.forEach((message, index) => {
            setTimeout(() => {
                message.classList.add('visible');
            }, 1000 * (index + 1));
        });

        // Crear flores y corazones cayendo
        function createFallingElement(type) {
            const container = document.querySelector('.hearts-container');
            const element = document.createElement('div');
            element.className = type;
            element.style.left = Math.random() * 100 + 'vw';
            element.style.setProperty('--duration', Math.random() * 3 + 3 + 's');
            
            if (type === 'heart') {
                element.innerHTML = '‚ù§Ô∏è';
            } else {
                const flowers = ['üå∏', 'üåπ', 'üå∫', 'üå∑', 'üåº', 'üíû‚Äã', 'üòª‚Äã‚Äã', 'üíï‚Äã‚Äã'];
                element.innerHTML = flowers[Math.floor(Math.random() * flowers.length)];
            }
            
            container.appendChild(element);
            setTimeout(() => element.remove(), 6000);
        }

        setInterval(() => createFallingElement('heart'), 300);
        setInterval(() => createFallingElement('flower'), 400);

        // Manejar botones
        const siBtn = document.getElementById('siBtn');
        const noBtn = document.getElementById('noBtn');
        const finalMessage = document.querySelector('.final-message');

        siBtn.addEventListener('click', () => {
            document.querySelector('.buttons').style.display = 'none';
            finalMessage.style.display = 'block';
            finalMessage.innerHTML = `
                <p>¬°Te quiero con todo mi coraz√≥n! ‚ù§Ô∏è</p>
                <p>Eres un soplo de aire que me inspira tu realmente si me exitas.</p>
                <p>Ya se como se siente que alguien te d√© todo su querer, GRACIAS A TI <3 .</p>
                <p>¬°Gracias por ser mi San Valent√≠n!</p>
            `;
            
            // Aumentar la cantidad de corazones y flores
            setInterval(() => createFallingElement('heart'), 100);
            setInterval(() => createFallingElement('flower'), 150);
        });

        noBtn.addEventListener('mouseover', (e) => {
            const maxX = window.innerWidth - noBtn.offsetWidth;
            const maxY = window.innerHeight - noBtn.offsetHeight;
            
            let newX = Math.random() * maxX;
            let newY = Math.random() * maxY;
            
            noBtn.style.position = 'fixed';
            noBtn.style.left = newX + 'px';
            noBtn.style.top = newY + 'px';
        });
    </script> 
</body>
</html>
